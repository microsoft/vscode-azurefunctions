steps:
- script: |
    sudo cp .azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
    sudo chmod +x /etc/init.d/xvfb
    sudo update-rc.d xvfb defaults
    sudo service xvfb start
  displayName: 'Start X Virtual Frame Buffer'
  condition: eq(variables['Agent.OS'], 'Linux')

# Tempoary workaround for https://github.com/ballerina-platform/ballerina-distribution/issues/4537
- script: |
    curl -o ballerina.deb 'https://dist.ballerina.io/downloads/2201.6.0/ballerina-2201.6.0-swan-lake-linux-x64.deb'
    sudo dpkg -i ballerina.deb
    rm -f ballerina.deb
  displayName: Install Ballerina(Linux)
  condition: eq(variables['Agent.OS'], 'Linux')

- script: |
    curl -o ballerina.pkg 'https://dist.ballerina.io/downloads/2201.6.0/ballerina-2201.6.0-swan-lake-macos-x64.pkg'
    sudo installer -pkg ballerina.pkg -target /
    rm -f ballerina.pkg
    echo '##vso[task.prependpath]/Library/Ballerina/bin'
  displayName: Install Ballerina(MacOS)
  condition: eq(variables['Agent.OS'], 'Darwin')

- script: |
      curl -o ballerina.msi https://dist.ballerina.io/downloads/2201.6.0/ballerina-2201.6.0-swan-lake-windows-x64.msi
      msiexec /i ballerina.msi /quiet /qr /L*V "C:\Temp\msilog.log"
      del ballerina.msi
      echo "##vso[task.setvariable variable=PATH]C:\Program Files\Ballerina\bin;$(PATH)"
  displayName: Install Ballerina(Windows)
  condition: eq(variables['Agent.OS'], 'Windows_NT')

- task: UsePythonVersion@0
  displayName: 'Use Python 3.7.x'
  inputs:
    versionSpec: 3.7.x

- task: UseDotNet@2
  displayName: 'Use .NET sdk 7.0.x'
  inputs:
    version: 7.0.x
    includePreviewVersions: true

- task: UseDotNet@2
  displayName: 'Use .NET sdk 6.0.x'
  inputs:
    version: 6.0.x
    includePreviewVersions: true

- task: Npm@1
  displayName: 'Test'
  inputs:
    command: custom
    customCommand: test
  env:
    SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
    SERVICE_PRINCIPAL_SECRET: $(SERVICE_PRINCIPAL_SECRET)
    SERVICE_PRINCIPAL_DOMAIN: $(SERVICE_PRINCIPAL_DOMAIN)
    DISPLAY: :10 # Only necessary for linux tests

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFiles: '*-results.xml'
    testRunTitle: '$(Agent.OS)'
  condition: succeededOrFailed()
